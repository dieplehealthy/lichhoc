const admin = require('firebase-admin');

// Lấy thông tin tài khoản dịch vụ từ biến môi trường
const serviceAccount = JSON.parse(process.env.FIREBASE_SERVICE_ACCOUNT);

// Khởi tạo ứng dụng Firebase
admin.initializeApp({
  credential: admin.credential.cert(serviceAccount),
  databaseURL: "https://your-project-id.firebaseio.com" // Thay đổi thành URL cơ sở dữ liệu của bạn
});

const db = admin.firestore();

// Chức năng để sao chép và cập nhật dữ liệu lịch học
async function archiveAndCopySchedule() {
  try {
    const today = new Date();
    const lastSunday = new Date(today.setDate(today.getDate() - today.getDay()));
    
    // Lấy dữ liệu của tuần hiện tại (hoặc tuần cũ)
    const oldWeekScheduleRef = db.collection('schedules').where('weekStart', '==', lastSunday.toISOString().split('T')[0]);
    const oldWeekScheduleSnapshot = await oldWeekScheduleRef.get();

    if (oldWeekScheduleSnapshot.empty) {
      console.log('Không tìm thấy lịch học cho tuần cũ. Kết thúc kịch bản.');
      return;
    }

    const batch = db.batch();

    oldWeekScheduleSnapshot.forEach(doc => {
      const oldData = doc.data();
      const newDates = {};

      // Tạo một đối tượng mới để lưu trữ dữ liệu đã cập nhật
      const newData = { ...oldData };

      // Cập nhật các ngày trong tuần cũ thành tuần mới
      const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];
      daysOfWeek.forEach(day => {
        if (oldData[day]) {
          const oldDate = new Date(oldData[day].date);
          const newDate = new Date(oldDate);
          newDate.setDate(oldDate.getDate() + 7); // Tăng thêm 7 ngày
          
          newData[day] = {
            ...oldData[day],
            date: newDate.toISOString().split('T')[0] // Cập nhật ngày
          };
        }
      });
      
      // Tạo một tài liệu mới cho tuần mới
      const nextSunday = new Date(lastSunday.setDate(lastSunday.getDate() + 7));
      const newDocId = `schedule_${nextSunday.toISOString().split('T')[0]}`;
      const newDocRef = db.collection('schedules').doc(newDocId);
      newData.weekStart = nextSunday.toISOString().split('T')[0];
      
      batch.set(newDocRef, newData);
    });

    await batch.commit();
    console.log('Sao chép lịch học thành công cho tuần mới.');

  } catch (error) {
    console.error('Lỗi khi lưu trữ và sao chép lịch học:', error);
  }
}

archiveAndCopySchedule();
